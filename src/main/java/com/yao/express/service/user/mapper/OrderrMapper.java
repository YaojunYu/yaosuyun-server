package com.yao.express.service.user.mapper;

import com.yao.express.service.user.dto.CustomerOrderListItem;
import com.yao.express.service.user.dto.DriverOrderListItem;
import com.yao.express.service.user.dto.ListQueryOption;
import com.yao.express.service.user.entity.Orderr;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface OrderrMapper {
    @Delete({
        "delete from orderr",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    @Insert({
        "insert into orderr (order_id, sender_id, ",
        "sender_phone, driver_id, ",
        "driver_name, driver_phone, ",
        "capacity, status, ",
        "origin_location_lati, origin_location_longi, ",
        "origin_address_title, origin_address_detail, ",
        "origin_address_room, origin_person, ",
        "origin_phone, destination_location_lati, ",
        "destination_location_longi, destination_address_title, ",
        "destination_address_detail, destination_address_room, ",
        "destination_person, destination_phone, ",
        "mileage_price, wait_price, ",
        "total_price, deliver_type, ",
        "order_type, book_time, ",
        "sender_name, vehicle_id, ",
        "license_no, vehicle_color, ",
        "vehicle_type, vehicle_brand, ",
        "distance, duration, ",
        "wait_minutes, start_location_latitude, ",
        "start_location_longitude, start_time, ",
        "arrive_time, send_time, ",
        "receive_time, complete_time, ",
        "create_time, update_time, ",
        "note, block_reason, ",
        "reject_reason, back_reason, ",
        "plan_points, real_points)",
        "values (#{orderId,jdbcType=VARCHAR}, #{senderId,jdbcType=VARCHAR}, ",
        "#{senderPhone,jdbcType=VARCHAR}, #{driverId,jdbcType=VARCHAR}, ",
        "#{driverName,jdbcType=VARCHAR}, #{driverPhone,jdbcType=VARCHAR}, ",
        "#{capacity,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, ",
        "#{originLocationLati,jdbcType=DOUBLE}, #{originLocationLongi,jdbcType=DOUBLE}, ",
        "#{originAddressTitle,jdbcType=VARCHAR}, #{originAddressDetail,jdbcType=VARCHAR}, ",
        "#{originAddressRoom,jdbcType=VARCHAR}, #{originPerson,jdbcType=VARCHAR}, ",
        "#{originPhone,jdbcType=VARCHAR}, #{destinationLocationLati,jdbcType=DOUBLE}, ",
        "#{destinationLocationLongi,jdbcType=DOUBLE}, #{destinationAddressTitle,jdbcType=VARCHAR}, ",
        "#{destinationAddressDetail,jdbcType=VARCHAR}, #{destinationAddressRoom,jdbcType=VARCHAR}, ",
        "#{destinationPerson,jdbcType=VARCHAR}, #{destinationPhone,jdbcType=VARCHAR}, ",
        "#{mileagePrice,jdbcType=DECIMAL}, #{waitPrice,jdbcType=DECIMAL}, ",
        "#{totalPrice,jdbcType=DECIMAL}, #{deliverType,jdbcType=VARCHAR}, ",
        "#{orderType,jdbcType=VARCHAR}, #{bookTime,jdbcType=TIMESTAMP}, ",
        "#{senderName,jdbcType=VARCHAR}, #{vehicleId,jdbcType=VARCHAR}, ",
        "#{licenseNo,jdbcType=VARCHAR}, #{vehicleColor,jdbcType=VARCHAR}, ",
        "#{vehicleType,jdbcType=CHAR}, #{vehicleBrand,jdbcType=VARCHAR}, ",
        "#{distance,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, ",
        "#{waitMinutes,jdbcType=INTEGER}, #{startLocationLatitude,jdbcType=DOUBLE}, ",
        "#{startLocationLongitude,jdbcType=DOUBLE}, #{startTime,jdbcType=TIMESTAMP}, ",
        "#{arriveTime,jdbcType=TIMESTAMP}, #{sendTime,jdbcType=TIMESTAMP}, ",
        "#{receiveTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{note,jdbcType=VARCHAR}, #{blockReason,jdbcType=VARCHAR}, ",
        "#{rejectReason,jdbcType=VARCHAR}, #{backReason,jdbcType=VARCHAR}, ",
        "#{planPoints,jdbcType=LONGVARCHAR}, #{realPoints,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(Orderr record);

    @InsertProvider(type=OrderrSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(Orderr record);

    @Select({
        "select",
        "id, order_id, sender_id, sender_phone, driver_id, driver_name, driver_phone, ",
        "capacity, status, origin_location_lati, origin_location_longi, origin_address_title, ",
        "origin_address_detail, origin_address_room, origin_person, origin_phone, destination_location_lati, ",
        "destination_location_longi, destination_address_title, destination_address_detail, ",
        "destination_address_room, destination_person, destination_phone, mileage_price, ",
        "wait_price, total_price, deliver_type, order_type, book_time, sender_name, vehicle_id, ",
        "license_no, vehicle_color, vehicle_type, vehicle_brand, distance, duration, ",
        "wait_minutes, start_location_latitude, start_location_longitude, start_time, ",
        "arrive_time, send_time, receive_time, complete_time, create_time, update_time, ",
        "note, block_reason, reject_reason, back_reason, plan_points, real_points",
        "from orderr",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="sender_phone", property="senderPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="driver_id", property="driverId", jdbcType=JdbcType.VARCHAR),
        @Result(column="driver_name", property="driverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="driver_phone", property="driverPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin_location_lati", property="originLocationLati", jdbcType=JdbcType.DOUBLE),
        @Result(column="origin_location_longi", property="originLocationLongi", jdbcType=JdbcType.DOUBLE),
        @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin_address_detail", property="originAddressDetail", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin_address_room", property="originAddressRoom", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin_person", property="originPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin_phone", property="originPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination_location_lati", property="destinationLocationLati", jdbcType=JdbcType.DOUBLE),
        @Result(column="destination_location_longi", property="destinationLocationLongi", jdbcType=JdbcType.DOUBLE),
        @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination_address_detail", property="destinationAddressDetail", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination_address_room", property="destinationAddressRoom", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination_person", property="destinationPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination_phone", property="destinationPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="mileage_price", property="mileagePrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="wait_price", property="waitPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="sender_name", property="senderName", jdbcType=JdbcType.VARCHAR),
        @Result(column="vehicle_id", property="vehicleId", jdbcType=JdbcType.VARCHAR),
        @Result(column="license_no", property="licenseNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="vehicle_color", property="vehicleColor", jdbcType=JdbcType.VARCHAR),
        @Result(column="vehicle_type", property="vehicleType", jdbcType=JdbcType.CHAR),
        @Result(column="vehicle_brand", property="vehicleBrand", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.INTEGER),
        @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
        @Result(column="wait_minutes", property="waitMinutes", jdbcType=JdbcType.INTEGER),
        @Result(column="start_location_latitude", property="startLocationLatitude", jdbcType=JdbcType.DOUBLE),
        @Result(column="start_location_longitude", property="startLocationLongitude", jdbcType=JdbcType.DOUBLE),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="arrive_time", property="arriveTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="send_time", property="sendTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="receive_time", property="receiveTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="complete_time", property="completeTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="block_reason", property="blockReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="reject_reason", property="rejectReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="back_reason", property="backReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="plan_points", property="planPoints", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="real_points", property="realPoints", jdbcType=JdbcType.LONGVARCHAR)
    })
    Orderr selectByPrimaryKey(Long id);

    @UpdateProvider(type=OrderrSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Orderr record);

    @Update({
        "update orderr",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "sender_id = #{senderId,jdbcType=VARCHAR},",
          "sender_phone = #{senderPhone,jdbcType=VARCHAR},",
          "driver_id = #{driverId,jdbcType=VARCHAR},",
          "driver_name = #{driverName,jdbcType=VARCHAR},",
          "driver_phone = #{driverPhone,jdbcType=VARCHAR},",
          "capacity = #{capacity,jdbcType=INTEGER},",
          "status = #{status,jdbcType=VARCHAR},",
          "origin_location_lati = #{originLocationLati,jdbcType=DOUBLE},",
          "origin_location_longi = #{originLocationLongi,jdbcType=DOUBLE},",
          "origin_address_title = #{originAddressTitle,jdbcType=VARCHAR},",
          "origin_address_detail = #{originAddressDetail,jdbcType=VARCHAR},",
          "origin_address_room = #{originAddressRoom,jdbcType=VARCHAR},",
          "origin_person = #{originPerson,jdbcType=VARCHAR},",
          "origin_phone = #{originPhone,jdbcType=VARCHAR},",
          "destination_location_lati = #{destinationLocationLati,jdbcType=DOUBLE},",
          "destination_location_longi = #{destinationLocationLongi,jdbcType=DOUBLE},",
          "destination_address_title = #{destinationAddressTitle,jdbcType=VARCHAR},",
          "destination_address_detail = #{destinationAddressDetail,jdbcType=VARCHAR},",
          "destination_address_room = #{destinationAddressRoom,jdbcType=VARCHAR},",
          "destination_person = #{destinationPerson,jdbcType=VARCHAR},",
          "destination_phone = #{destinationPhone,jdbcType=VARCHAR},",
          "mileage_price = #{mileagePrice,jdbcType=DECIMAL},",
          "wait_price = #{waitPrice,jdbcType=DECIMAL},",
          "total_price = #{totalPrice,jdbcType=DECIMAL},",
          "deliver_type = #{deliverType,jdbcType=VARCHAR},",
          "order_type = #{orderType,jdbcType=VARCHAR},",
          "book_time = #{bookTime,jdbcType=TIMESTAMP},",
          "sender_name = #{senderName,jdbcType=VARCHAR},",
          "vehicle_id = #{vehicleId,jdbcType=VARCHAR},",
          "license_no = #{licenseNo,jdbcType=VARCHAR},",
          "vehicle_color = #{vehicleColor,jdbcType=VARCHAR},",
          "vehicle_type = #{vehicleType,jdbcType=CHAR},",
          "vehicle_brand = #{vehicleBrand,jdbcType=VARCHAR},",
          "distance = #{distance,jdbcType=INTEGER},",
          "duration = #{duration,jdbcType=INTEGER},",
          "wait_minutes = #{waitMinutes,jdbcType=INTEGER},",
          "start_location_latitude = #{startLocationLatitude,jdbcType=DOUBLE},",
          "start_location_longitude = #{startLocationLongitude,jdbcType=DOUBLE},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "arrive_time = #{arriveTime,jdbcType=TIMESTAMP},",
          "send_time = #{sendTime,jdbcType=TIMESTAMP},",
          "receive_time = #{receiveTime,jdbcType=TIMESTAMP},",
          "complete_time = #{completeTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "note = #{note,jdbcType=VARCHAR},",
          "block_reason = #{blockReason,jdbcType=VARCHAR},",
          "reject_reason = #{rejectReason,jdbcType=VARCHAR},",
          "back_reason = #{backReason,jdbcType=VARCHAR},",
          "plan_points = #{planPoints,jdbcType=LONGVARCHAR},",
          "real_points = #{realPoints,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(Orderr record);

    @Update({
        "update orderr",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "sender_id = #{senderId,jdbcType=VARCHAR},",
          "sender_phone = #{senderPhone,jdbcType=VARCHAR},",
          "driver_id = #{driverId,jdbcType=VARCHAR},",
          "driver_name = #{driverName,jdbcType=VARCHAR},",
          "driver_phone = #{driverPhone,jdbcType=VARCHAR},",
          "capacity = #{capacity,jdbcType=INTEGER},",
          "status = #{status,jdbcType=VARCHAR},",
          "origin_location_lati = #{originLocationLati,jdbcType=DOUBLE},",
          "origin_location_longi = #{originLocationLongi,jdbcType=DOUBLE},",
          "origin_address_title = #{originAddressTitle,jdbcType=VARCHAR},",
          "origin_address_detail = #{originAddressDetail,jdbcType=VARCHAR},",
          "origin_address_room = #{originAddressRoom,jdbcType=VARCHAR},",
          "origin_person = #{originPerson,jdbcType=VARCHAR},",
          "origin_phone = #{originPhone,jdbcType=VARCHAR},",
          "destination_location_lati = #{destinationLocationLati,jdbcType=DOUBLE},",
          "destination_location_longi = #{destinationLocationLongi,jdbcType=DOUBLE},",
          "destination_address_title = #{destinationAddressTitle,jdbcType=VARCHAR},",
          "destination_address_detail = #{destinationAddressDetail,jdbcType=VARCHAR},",
          "destination_address_room = #{destinationAddressRoom,jdbcType=VARCHAR},",
          "destination_person = #{destinationPerson,jdbcType=VARCHAR},",
          "destination_phone = #{destinationPhone,jdbcType=VARCHAR},",
          "mileage_price = #{mileagePrice,jdbcType=DECIMAL},",
          "wait_price = #{waitPrice,jdbcType=DECIMAL},",
          "total_price = #{totalPrice,jdbcType=DECIMAL},",
          "deliver_type = #{deliverType,jdbcType=VARCHAR},",
          "order_type = #{orderType,jdbcType=VARCHAR},",
          "book_time = #{bookTime,jdbcType=TIMESTAMP},",
          "sender_name = #{senderName,jdbcType=VARCHAR},",
          "vehicle_id = #{vehicleId,jdbcType=VARCHAR},",
          "license_no = #{licenseNo,jdbcType=VARCHAR},",
          "vehicle_color = #{vehicleColor,jdbcType=VARCHAR},",
          "vehicle_type = #{vehicleType,jdbcType=CHAR},",
          "vehicle_brand = #{vehicleBrand,jdbcType=VARCHAR},",
          "distance = #{distance,jdbcType=INTEGER},",
          "duration = #{duration,jdbcType=INTEGER},",
          "wait_minutes = #{waitMinutes,jdbcType=INTEGER},",
          "start_location_latitude = #{startLocationLatitude,jdbcType=DOUBLE},",
          "start_location_longitude = #{startLocationLongitude,jdbcType=DOUBLE},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "arrive_time = #{arriveTime,jdbcType=TIMESTAMP},",
          "send_time = #{sendTime,jdbcType=TIMESTAMP},",
          "receive_time = #{receiveTime,jdbcType=TIMESTAMP},",
          "complete_time = #{completeTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "note = #{note,jdbcType=VARCHAR},",
          "block_reason = #{blockReason,jdbcType=VARCHAR},",
          "reject_reason = #{rejectReason,jdbcType=VARCHAR},",
          "back_reason = #{backReason,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Orderr record);




    // add by york
    @Select({
            "select",
            "id, order_id, sender_id, sender_phone, driver_id, driver_name, driver_phone, ",
            "capacity, status, origin_location_lati, origin_location_longi, origin_address_title, ",
            "origin_address_detail, origin_address_room, origin_person, origin_phone, destination_location_lati, ",
            "destination_location_longi, destination_address_title, destination_address_detail, ",
            "destination_address_room, destination_person, destination_phone, mileage_price, ",
            "wait_price, total_price, deliver_type, order_type, book_time, sender_name, vehicle_id, ",
            "license_no, vehicle_color, vehicle_type, vehicle_brand, distance, duration, ",
            "wait_minutes, start_location_latitude, start_location_longitude, start_time, ",
            "arrive_time, send_time, receive_time, complete_time, create_time, update_time, ",
            "note, block_reason, reject_reason, back_reason, plan_points, real_points",
            "from orderr",
            "where order_id = #{orderId,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_phone", property="senderPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_id", property="driverId", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_name", property="driverName", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_phone", property="driverPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_location_lati", property="originLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_location_longi", property="originLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_detail", property="originAddressDetail", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_room", property="originAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_person", property="originPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_phone", property="originPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_location_lati", property="destinationLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_location_longi", property="destinationLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_detail", property="destinationAddressDetail", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_room", property="destinationAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_person", property="destinationPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_phone", property="destinationPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="mileage_price", property="mileagePrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="wait_price", property="waitPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
            @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
            @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="sender_name", property="senderName", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_id", property="vehicleId", jdbcType=JdbcType.VARCHAR),
            @Result(column="license_no", property="licenseNo", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_color", property="vehicleColor", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_type", property="vehicleType", jdbcType=JdbcType.CHAR),
            @Result(column="vehicle_brand", property="vehicleBrand", jdbcType=JdbcType.VARCHAR),
            @Result(column="distance", property="distance", jdbcType=JdbcType.INTEGER),
            @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
            @Result(column="wait_minutes", property="waitMinutes", jdbcType=JdbcType.INTEGER),
            @Result(column="start_location_latitude", property="startLocationLatitude", jdbcType=JdbcType.DOUBLE),
            @Result(column="start_location_longitude", property="startLocationLongitude", jdbcType=JdbcType.DOUBLE),
            @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="arrive_time", property="arriveTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="send_time", property="sendTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="receive_time", property="receiveTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="complete_time", property="completeTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR),
            @Result(column="block_reason", property="blockReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="reject_reason", property="rejectReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="back_reason", property="backReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="plan_points", property="planPoints", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="real_points", property="realPoints", jdbcType=JdbcType.LONGVARCHAR)
    })
    Orderr selectByOrderId(String orderId);

    @Select({
            "select",
            "id, order_id, sender_id, capacity, status,",
            "origin_address_title, origin_address_room,",
            "destination_address_title, destination_address_room, ",
            "total_price, deliver_type, order_type, book_time, ",
            "create_time",
            "from orderr",
            "where sender_id = #{senderId,jdbcType=VARCHAR} and status!='timeout' and status!='deleted'",
            "order by create_time desc"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_room", property="originAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_room", property="destinationAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
            @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
            @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CustomerOrderListItem> selectByCustomerId(String senderId);

    @Select({
            "select",
            "id, order_id, sender_id, capacity, status,",
            "origin_address_title, origin_address_room,",
            "destination_address_title, destination_address_room, ",
            "total_price, deliver_type, order_type, book_time, ",
            "create_time",
            "from orderr",
            "where sender_id = #{senderId,jdbcType=VARCHAR} and status in (${status})",
            "order by create_time desc"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_room", property="originAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_room", property="destinationAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
            @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
            @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CustomerOrderListItem> selectByCustomerIdAndStatus(@Param("senderId") String senderId, @Param("status") String status);


    @Select({
            "select",
            "id, order_id, sender_phone, ",
            "capacity, status, origin_location_lati, origin_location_longi, origin_address_title, ",
            "origin_person, origin_phone, destination_location_lati, ",
            "destination_location_longi, destination_address_title, ",
            "destination_person, destination_phone, mileage_price, wait_price, total_price, ",
            "deliver_type, order_type, book_time, sender_name, ",
            "distance, duration,",
            "create_time",
            "from orderr",
            "where driver_id = #{driverId,jdbcType=VARCHAR} and status in (${status})",
            "order by create_time desc"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_phone", property="senderPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_location_lati", property="originLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_location_longi", property="originLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_person", property="originPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_phone", property="originPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_location_lati", property="destinationLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_location_longi", property="destinationLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_person", property="destinationPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_phone", property="destinationPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="mileage_price", property="mileagePrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="wait_price", property="waitPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
            @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
            @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="sender_name", property="senderName", jdbcType=JdbcType.VARCHAR),
            @Result(column="distance", property="distance", jdbcType=JdbcType.INTEGER),
            @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<DriverOrderListItem> selectByDriverIdAndStatus(@Param("driverId") String driverId, @Param("status") String status);


    @UpdateProvider(type=OrderrSqlProvider.class, method="updateByOrderIdSelective")
    int updateByOrderIdSelective(Orderr record);

    @Select({
            "select COUNT(id) from orderr",
            "where driver_id = #{driverId,jdbcType=VARCHAR} ",
            "and status in ('got','arrived','send','back','backing')"
    })
    int countNotCompleteOrder(@Param("driverId") String driverId);

    @SelectProvider(type = OrderrSqlProvider.class, method="selectList")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_id", property="senderId", jdbcType=JdbcType.VARCHAR),
            @Result(column="sender_phone", property="senderPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_id", property="driverId", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_name", property="driverName", jdbcType=JdbcType.VARCHAR),
            @Result(column="driver_phone", property="driverPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="capacity", property="capacity", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_location_lati", property="originLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_location_longi", property="originLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="origin_address_title", property="originAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_detail", property="originAddressDetail", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_address_room", property="originAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_person", property="originPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="origin_phone", property="originPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_location_lati", property="destinationLocationLati", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_location_longi", property="destinationLocationLongi", jdbcType=JdbcType.DOUBLE),
            @Result(column="destination_address_title", property="destinationAddressTitle", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_detail", property="destinationAddressDetail", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_address_room", property="destinationAddressRoom", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_person", property="destinationPerson", jdbcType=JdbcType.VARCHAR),
            @Result(column="destination_phone", property="destinationPhone", jdbcType=JdbcType.VARCHAR),
            @Result(column="mileage_price", property="mileagePrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="wait_price", property="waitPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="total_price", property="totalPrice", jdbcType=JdbcType.DECIMAL),
            @Result(column="deliver_type", property="deliverType", jdbcType=JdbcType.VARCHAR),
            @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
            @Result(column="book_time", property="bookTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="sender_name", property="senderName", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_id", property="vehicleId", jdbcType=JdbcType.VARCHAR),
            @Result(column="license_no", property="licenseNo", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_color", property="vehicleColor", jdbcType=JdbcType.VARCHAR),
            @Result(column="vehicle_type", property="vehicleType", jdbcType=JdbcType.CHAR),
            @Result(column="vehicle_brand", property="vehicleBrand", jdbcType=JdbcType.VARCHAR),
            @Result(column="distance", property="distance", jdbcType=JdbcType.INTEGER),
            @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
            @Result(column="wait_minutes", property="waitMinutes", jdbcType=JdbcType.INTEGER),
            @Result(column="start_location_latitude", property="startLocationLatitude", jdbcType=JdbcType.DOUBLE),
            @Result(column="start_location_longitude", property="startLocationLongitude", jdbcType=JdbcType.DOUBLE),
            @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="arrive_time", property="arriveTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="send_time", property="sendTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="receive_time", property="receiveTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="complete_time", property="completeTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR),
            @Result(column="block_reason", property="blockReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="reject_reason", property="rejectReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="back_reason", property="backReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="plan_points", property="planPoints", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="real_points", property="realPoints", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Orderr> selectList(ListQueryOption query);
}